@using opra.itelligent.es.ViewModels
@inject Microsoft.Extensions.Configuration.IConfiguration configuration;
@model VehicleRoutingModel;

@{
    Layout = "_footerFull";
    ViewData["Title"] = "Logística";
}

<div id="map" class="flex-grow-1"></div>

<div id="loadpanel"></div>

@section head {
<style>
    .gm-style-iw button {
        display: none !important;
    }
</style>
}

@section scripts{
<script src="https://maps.googleapis.com/maps/api/js?key=@configuration["ApiKeyGoogle"]"></script>
<script src="lib/geolib/lib/index.min.js"></script>
<script>
    var map;
    var directionsService;
    var directionsDisplay;
    var infowindow;
    //var markerOrigen;
    var route;
    var optimalRoute;

    var data = @Json.Serialize(Model.Puntos);
    var optimal = @Json.Serialize(Model.SolucionOptima);

    var modeloActual = null;
    var resultadoActual = null;

    var formatter = new Intl.NumberFormat('es-ES', {
        style: 'decimal',
        maximumFractionDigits: 2
    });

    var formatterPercent = new Intl.NumberFormat('es-ES', {
        style: 'percent',
        maximumFractionDigits: 2
    });

    $(function () {
        var optimalPath = [];
        for(let index of optimal){
            let location = new google.maps.LatLng(data[index].lat, data[index].lng);
            optimalPath.push(location);
        }

        let costeOptimo = geolib.getPathLength(optimalPath.map(x => x.toJSON()));

        map = new google.maps.Map(document.getElementById('map'), {
            center: { lat: 40.416812, lng: -3.7038796 },
            zoom: 6,
            streetViewControl: false,
            fullscreenControl: false
        });

        //markerOrigen = new google.maps.Marker({
        //    map: map,
        //    position: { lat: 40.342433, lng:-3.861870},
        //    icon: 'https://www.google.com/maps/vt/icon/name=assets/icons/spotlight/spotlight_pin_v2_shadow-1-small.png,assets/icons/spotlight/spotlight_pin_v2-1-small.png,assets/icons/spotlight/spotlight_pin_v2_dot-1-small.png,assets/icons/spotlight/spotlight_pin_v2_accent-1-small.png&highlight=ff000000,8BC34A,33691E&color=ff000000?scale=1'
        //});

        infowindow = new google.maps.InfoWindow({
            disableAutoPan: true
        });

        directionsService = new google.maps.DirectionsService;
        directionsDisplay = new google.maps.DirectionsRenderer({
            suppressMarkers: true
        });

        directionsDisplay.setMap(map);

        $("#loadpanel").dxLoadPanel({
            position: {of: '#map'},
            closeOnOutsideClick: false,
            visible: false,
            message: "Optimizando ruta..."
        });

        

        var buttonOptimizar2 = $('<button>', {
            class: 'btn btn-primary mt-2 rounded border shadow',
            text: 'Optimizar modelo 2'
        }).click(function () {
            optimizar(2, data);
        });

        var infoCoste = $('<div>', {id: 'info-resultados', class:'card m-2', style: 'font-size: 1rem;'})
            .append($('<div>', {class: 'card-body p-3'})
                .append($('<h5>', {text: 'Resultados de ejecución', class: 'card-title'}))
                .append($('<p>', {text: 'Tiempo: ', class: 'mb-2'})
                    .append($('<span>', {id: 'text-tiempo'}))
                )
                .append($('<p>', {text: 'Coste: ', class: 'mb-2'})
                    .append($('<span>', {id: 'text-coste'}))
                )
                .append($('<p>', {text: `Coste óptimo: ${formatter.format(costeOptimo)} metros`, class: 'mb-2'})
                    .append($('<span>', {id: 'text-coste-optimo'}))
                )
                .append($('<p>', {text: `Gap: `})
                    .append($('<span>', {id: 'text-gap'}))
                )
                .append($('<button>', { id: 'button-guardar', text: 'Guardar', class: 'btn btn-sm btn-primary'}).prop('disabled',true).click(() => {
                    guardarResultado(modeloActual, resultadoActual);
                }))
                .append($('<a>', { text: 'Comparar resultados', href: '/ResultadosVehicleRouting', class: 'btn btn-sm btn-outline-primary ml-2'}))
            );

        var storeResultados = new DevExpress.data.ODataStore({
            version: 4,
            url: '/odata/ModelosTSP',
            key: 'IntId'
        });

        storeResultados.load().done(function(res){
            for(let modelo of res){
                let buttonOptimizar = $('<button>', {
                    class: 'btn btn-primary mt-2 rounded border shadow',
                    text: `Optimizar con ${modelo.StrNombre}`
                }).click(function () {
                    optimizar(modelo.IntId, data);
                });

                map.controls[google.maps.ControlPosition.TOP_CENTER].push(buttonOptimizar[0]);
            }
        });

       
        //map.controls[google.maps.ControlPosition.TOP_CENTER].push(buttonOptimizar2[0]);
        map.controls[google.maps.ControlPosition.LEFT_BOTTOM].push(infoCoste[0]);


        var markerBounds = new google.maps.LatLngBounds();
        //markerBounds.extend(markerOrigen.getPosition());
        data.forEach(function (item) {
            var location = new google.maps.LatLng(item.lat, item.lng);
            markerBounds.extend(location);
            var marker = new google.maps.Marker({ position: location, map: map });

            marker.addListener('mouseover', function () {
                infowindow.setOptions({
                    content: item.nombre
                });
                infowindow.open(map, marker);
            });

            //marker.addListener('mouseout', function () {
            //    infowindow.close();
            //});
        });

        var lineSymbol = {
          path: 'M 0,-1 0,1',
          strokeOpacity: 0.5,
          scale: 3,
          strokeColor: '#FF0000',
        };

        optimalRoute = new google.maps.Polyline({
          path: optimalPath,
          strokeOpacity: 0,
          icons: [{
            icon: lineSymbol,
            offset: '0',
            repeat: '15px'
          }],
          map: map
        });

        map.fitBounds(markerBounds);

        var storeResultados = new DevExpress.data.ODataStore({
            version: 4,
            url: '/odata/SolucionesTSP',
            key: 'IntId'
        });

        function optimizar(modelo, datos) {
            $("#loadpanel").dxLoadPanel('show');
            modeloActual = modelo;

            let coordenadas = JSON.stringify(datos.map(x => [x.x, x.y]));

            $.post({
                url: 'https://opratsp.itelligent.es/problem',
                contentType: 'application/json',
                data: JSON.stringify({coordenadas}),
                success: function(res){
                    let indices = res.Indices;
                    //Meter primer punto para cerrar la ruta
                    indices.push(indices[0]);

                    let waypoints = [];

                    for(let i = 0; i < indices.length; i++){
                        let indice = indices[i];
                        let latLng = new google.maps.LatLng(datos[indice].lat, datos[indice].lng);
                        waypoints.push(latLng);
                    }

                    let coste = geolib.getPathLength(waypoints.map(x => x.toJSON()));

                    route = new google.maps.Polyline({
                        path: waypoints,
                        strokeColor: "DodgerBlue",
                        strokeOpacity: 1.0,
                        strokeWeight: 4
                    });

                    $('#text-coste').text(formatter.format(coste) + ' metros');
                    $('#text-gap').text(formatterPercent.format(coste/costeOptimo - 1));
                    $('#text-tiempo').text(formatter.format(res.Tiempo) + ' segundos');

                    route.setMap(map);

                    resultadoActual = {
                        indices: indices,
                        coste: coste,
                        tiempo: res.Tiempo
                    };

                    $('#button-guardar').prop('disabled', false);

                    $("#loadpanel").dxLoadPanel('hide');
                },
                error: function (jqXHR, textStatus, errorThrown) {
                    DevExpress.ui.notify(jqXHR.responseText, "error", 5000);
                    $("#loadpanel").dxLoadPanel('hide');
                }
            })
        }

        function guardarResultado(modelo, resultado){
            var item = {
                IntIdProblema: @Model.Problema,
                IntIdModelo: modelo,
                DblCoste: resultado.coste,
                DblTiempo: resultado.tiempo,
                StrSolucion: JSON.stringify(resultado.indices)
            };

            storeResultados.insert(item)
                .done(() => {
                    DevExpress.ui.notify('Solución guardada', 'success', 5000);
                })
                .fail(() => {
                    DevExpress.ui.notify(jqXHR.responseText, "error", 5000);
                });
        }
    });
</script>
}

